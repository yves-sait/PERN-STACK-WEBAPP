{"version":3,"sources":["components/Cards/Cards.module.css","components/Charts/Charts.module.css","components/CovidMap/Loading.jsx","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/CovidMap/Legend.jsx","task/Windowsize.js","components/CovidMap/Cmap.jsx","entities/LegendItem.js","entities/LegendItems.js","task/LoadTownsTask.js","components/CovidMap/Covid19.jsx","components/Footer/Coffee.jsx","components/Footer/Footer.jsx","images/image.png","app.js","index.js","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","display","marginLeft","spacing","CircularIndeterminate","classes","className","CircularProgress","color","IconWrapperStyle","styled","margin","borderRadius","alignItems","width","height","justifyContent","marginBottom","Cards","mainData","latestTown","main","date","death","recovery","active","active_cases","town_latest","length","report_date","new_death","new_recovery","new_active","town_name","mainCard","styles","container","Grid","item","component","Card","xs","sm","md","lg","cx","card","total","virus","icon","faVirus","CardContent","Typography","variant","gutterBottom","start","end","total_cases","duration","separator","Date","toDateString","infected","hosp","faHospitalUser","recovered","user","faUser","total_recoveries","deaths","cross","faCross","total_deaths","townCard","fetchDailyTown","town","a","fetch","response","json","dailyTown","fetchLatestTown","fetchMainData","fetchAllMainData","allMainData","fetchDailyMap","dailyMap","fetchTowns","jsonData","Charts","useState","setAllMainData","useEffect","fetchApi","lineChartMain","data","labels","map","datasets","label","borderColor","fill","backgroundColor","options","maintainAspectRatio","lineChartTown","CountryPicker","handleTownChange","fetchedTowns","setFetchedTowns","FormControl","formControl","NativeSelect","nativeSelect","defaultValue","onChange","e","target","value","towns","i","Legend","legendItems","style","flex","textColor","fontWeight","fontSize","title","WindowSize","window","innerWidth","widthSize","setWidthSize","handleResize","addEventListener","removeEventListener","useWindowSize","CMap","selectedTown","zoomLevel","mapStyle","weight","fillOpacity","highlightFeature","setStyle","dashArray","resetHighlight","formatNumberWithCommas","number","toString","replace","MapContainer","zoom","center","GeoJSON","onEachFeature","layer","fillColor","properties","name","MUNICIPALI","activeText","newActive","newActiveText","newRecovery","newRecoveryText","newDeath","newDeathText","bindPopup","on","mouseover","mouseout","Popup","position","toUpperCase","townData","Total","Active","Recovery","Death","PopUpData","LegendItems","isFor","this","LegendItem","cases","LoadTownsTask","setState","mapTowns","features","loadTown","covidTowns","mapTown","covidTown","find","Number","legendItem","Covid19","setTowns","legendItemsInReverse","reverse","Cmap","Button","Image","img","Text","span","Coffee","textAlign","href","src","alt","Footer","rel","textDecoration","getFullYear","App","state","fetchedDailyTown","fetchedLatestTown","fetchedMainData","image","corona","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.317abc5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"total\":\"Cards_total__1ZCEX\",\"hosp\":\"Cards_hosp__rguB6\",\"user\":\"Cards_user__1Kp7O\",\"cross\":\"Cards_cross__1eOxJ\",\"virus\":\"Cards_virus__2gC-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/*\nconst Loading = () => {\n    return(\n        <div>Loading . . . .</div>\n    );\n\n};\n\n*/\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVirus, faHospitalUser,faUser, faCross} from '@fortawesome/free-solid-svg-icons';\nimport Loading from '../CovidMap/Loading'\nimport { styled } from '@material-ui/core/styles';\n\n\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n    margin: 'auto',\n    display: 'flex',\n    borderRadius: '25%',\n    alignItems: 'center',\n    width: theme.spacing(8),\n    height: theme.spacing(8) ,\n    justifyContent: 'center',\n    marginBottom: 'center',\n  }));\n\n\nconst Cards = ({mainData,latestTown} ) =>{\n    \n    // console.log(mainData,\"cad\")\n    const main = mainData[0]    \n\n\n    let date ='';\n    let death ='';\n    let recovery ='';\n    let active ='';\n    let active_cases ='';\n    let town_latest ='';\n\n    if(latestTown.length !== 0){\n        date = latestTown[0].report_date;\n        death =latestTown[0].new_death;\n        recovery =latestTown[0].new_recovery;\n        active =latestTown[0].new_active;\n        active_cases =  latestTown[0].active_cases;\n        town_latest = latestTown[0].town_name;\n\n    }\n\n    if(!main ){\n        return <Loading></Loading>\n    }\n\n   \n\n\n    const mainCard = (\n\n       <div className={styles.container}>\n           <Grid container spacing={3} justifyContent=\"center\">\n                           \n           <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.total)}>\n               <IconWrapperStyle className={styles.virus}>\n               <FontAwesomeIcon icon={faVirus} />\n               </IconWrapperStyle>\n                   <CardContent>\n                   <Typography variant =\"h5\" ><b>ILOCOS NORTE </b></Typography>\n                       <Typography variant =\"h5\" >Total Cases </Typography>\n                       <Typography variant= \"h4\" gutterBottom>\n                           <CountUp start ={0} end={main.total_cases} duration={2.5} separator=\",\" />\n                        </Typography>\n                       <Typography color= 'textSecondary' >{new Date(main.report_date).toDateString() }</Typography>     \n                   </CardContent>\n               </Grid>\n               <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.infected)}>\n               <IconWrapperStyle className={styles.hosp}>\n               <FontAwesomeIcon icon={faHospitalUser} />\n               </IconWrapperStyle>\n                   <CardContent>\n                       <Typography variant=\"h5\">Active </Typography>\n                       <Typography variant= \"h4\" gutterBottom>\n                           <CountUp start ={0} end={main.active_cases}  duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography ><b>New</b> </Typography>\n                       <Typography variant= \"h4\" gutterBottom >+\n                           <CountUp start ={0} end={main.new_active} duration={2.5} separator=\",\" />\n                        </Typography>                \n                       <Typography color= 'textSecondary' >{new Date(main.report_date).toDateString() }</Typography>         \n                   </CardContent>\n\n               </Grid>\n               <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.recovered)}>\n               <IconWrapperStyle className={styles.user}>\n               <FontAwesomeIcon icon={faUser} />\n               </IconWrapperStyle>\n                   <CardContent>\n                       <Typography variant= \"h5\"  >Recoveries </Typography>\n                       <Typography variant= \"h4\" gutterBottom >\n                           <CountUp start ={0} end={main.total_recoveries} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography><b>New</b> </Typography>\n                       <Typography variant= \"h4\" gutterBottom>+\n                           <CountUp  start ={0} end={main.new_recovery} duration={2.5} separator=\",\" />\n                        </Typography>\n                       <Typography color= 'textSecondary' >{new Date(main.report_date).toDateString() }</Typography>\n                   </CardContent>\n               </Grid>\n               <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.deaths)}>\n               <IconWrapperStyle className={styles.cross}>\n               <FontAwesomeIcon icon={faCross} />\n               </IconWrapperStyle>\n                   <CardContent>\n                       <Typography variant =\"h5\" >Deaths </Typography>\n                       <Typography variant= \"h4\" gutterBottom>\n                           <CountUp start ={0} end={main.total_deaths} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography > <b>New</b> </Typography>\n                       <Typography variant= \"h4\" gutterBottom>\n                           <CountUp start ={0} end={main.new_death} duration={2.5} separator=\",\" />\n                        </Typography>\n                       <Typography color= 'textSecondary' >{new Date(main.report_date).toDateString() }</Typography>             \n                   </CardContent>\n               </Grid>\n           </Grid>\n       </div>\n    );\n\n    const townCard =(\n        <div className={styles.container}>\n        <Grid container spacing={3} justifyContent=\"center\">\n                        \n        <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.total)}>\n            <IconWrapperStyle className={styles.virus}>\n            <FontAwesomeIcon icon={faVirus} />\n            </IconWrapperStyle>\n                <CardContent>\n                <Typography variant=\"h5\"> <b>{town_latest} </b></Typography>\n                    <Typography variant =\"h5\" >Active Cases </Typography>\n                    <Typography variant= \"h4\" gutterBottom>\n                        <CountUp start ={0} end={active_cases} duration={1} separator=\",\" />\n                     </Typography>\n                    <Typography color= 'textSecondary' >{new Date(date).toDateString() }</Typography>     \n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.infected)}>\n            <IconWrapperStyle className={styles.hosp}>\n            <FontAwesomeIcon icon={faHospitalUser} />\n            </IconWrapperStyle>\n                <CardContent>\n                \n                    <Typography variant=\"h5\">New Active </Typography>\n                    <Typography variant= \"h4\" gutterBottom>\n                        <CountUp start ={0} end={active}  duration={1} separator=\",\" />\n                     </Typography>\n                               \n                    <Typography color= 'textSecondary' >{new Date(date).toDateString() }</Typography>         \n                </CardContent>\n\n            </Grid>\n            <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.recovered)}>\n            <IconWrapperStyle className={styles.user}>\n            <FontAwesomeIcon icon={faUser} />\n            </IconWrapperStyle>\n                <CardContent>\n                    <Typography variant= \"h5\"  >Recoveries </Typography>\n                    <Typography variant= \"h4\" gutterBottom >\n                        <CountUp start ={0} end={recovery} duration={1} separator=\",\" />\n                     </Typography>\n                    <Typography color= 'textSecondary' >{new Date(date).toDateString() }</Typography>\n                </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} sm={5} md={3} lg={2} className={cx(styles.card, styles.deaths)}>\n            <IconWrapperStyle className={styles.cross}>\n            <FontAwesomeIcon icon={faCross} />\n            </IconWrapperStyle>\n                <CardContent>\n                    <Typography variant =\"h5\" >Deaths </Typography>\n                    <Typography variant= \"h4\" gutterBottom>\n                        <CountUp start ={0} end={death} duration={1} separator=\",\" />\n                     </Typography>\n                    <Typography color= 'textSecondary' >{new Date(date).toDateString() }</Typography>             \n                </CardContent>\n            </Grid>\n        </Grid>\n    </div>\n\n    );\n\n    \n\n    return(\n       \n        \n        (latestTown.length === 0)? mainCard : townCard\n        \n    )\n}\n\nexport default Cards;","\n// daily town data\n\nexport const fetchDailyTown = async(town) =>{\n\n    if(town)\n        {\n        try {\n\n            const response = await fetch(`/daily/${town}`);\n            const dailyTown = await response.json();\n            return dailyTown;        \n        } catch (error) {     \n            return error\n        }\n    } \n\n    return [];\n\n \n\n}\n\n//latest town data\n\nexport const fetchLatestTown = async(town) =>{\n    if(town)\n    {\n    try {\n\n        const response = await fetch(`/latest/${town}`);\n        const latestTown = await response.json();\n        return latestTown;        \n    } catch (error) {     \n        return error\n        \n    }}\n\n    return [];\n}\n\n\n\nexport const fetchMainData = async(town) =>{\n\n    try {\n        const response = await fetch(`/main`);\n        const mainData = await response.json();\n        return mainData;\n\n        \n    } catch (error) {\n        return error\n        \n    }\n    \n\n   \n\n}\n\n\n// all main data api call\n\nexport const fetchAllMainData = async()=>{\n    try {\n\n        const response = await fetch(`/main/all`);\n        const allMainData = await response.json()\n        return allMainData;\n        \n    } catch (error) {\n        return error\n        \n    }\n}\n\n\n// all daily map data\n\nexport const fetchDailyMap = async() =>{\n    try {\n\n        const response = await fetch(`/map/daily`);\n        const dailyMap = await response.json();\n        return dailyMap;\n        \n    } catch (error) {\n        return error\n        \n    }\n}\n\n\n\nexport const fetchTowns = async () =>{\n    try{\n      \n        const response = await fetch(`/towns`);\n        const jsonData = await response.json();\n        return jsonData;\n\n    }catch(error){\n        return error;\n    } \n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { fetchAllMainData } from \"../../api\";\nimport { Line } from \"react-chartjs-2\";\nimport Loading from '../CovidMap/Loading';\nimport styles from \"./Charts.module.css\";\n\n\n\nconst Charts = ({dailyTown, town}) => {\n\n\n        const[allMainData, setAllMainData] = useState([]);\n        useEffect(() =>{\n            const fetchApi = async () =>{\n                setAllMainData(await fetchAllMainData());\n            }\n            fetchApi();\n        },[]);\n    \n\n\n\n\n    const lineChartMain = (\n        allMainData.length?\n        (\n            <Line\n                data ={{\n                    labels: allMainData.map(({report_date}) => report_date),\n                    datasets:[{\n                        data: allMainData.map(({total_cases})=> total_cases),\n                        label: 'Total Cases',\n                        borderColor: 'rgba(123,11,46,255)  ',\n                        // backgroundColor: 'rgba(253,231,217,255) ',\n                        fill: true,\n                    },{\n                        data: allMainData.map(({active_cases})=> active_cases),\n                        label: 'Active Cases',\n                        borderColor: 'rgba(14,41,123,255)',\n                        backgroundColor: 'rgba(207,242,255,255) ',\n                        fill: true,\n\n                    },{\n                        data: allMainData.map(({total_recoveries})=> total_recoveries),\n                        label: 'Recoveries',\n                        borderColor: 'rgba(21,81,73,255)',\n                        backgroundColor: 'rgba(200,249,204,255)  ',\n                        fill: true,\n                    },{\n                        data: allMainData.map(({total_deaths})=> total_deaths),\n                        label: 'Deaths',\n                        borderColor: 'rgba(67,70,75)',\n                        backgroundColor: 'rgb(219,226,233)  ',\n                        fill: true,\n                    }],\n                } }             options={{\n                    maintainAspectRatio : false\n                }}\n            \n            />) : <Loading></Loading>\n    );\n            \n    \n    \n  \n    const lineChartTown = (\n        dailyTown?\n        (\n            <Line\n                data ={{\n                    labels: dailyTown.map(({report_date}) => report_date),\n                    datasets:[{\n                        data: dailyTown.map(({active_cases})=> active_cases),\n                        label: 'Active Cases',\n                        borderColor: 'rgba(123,11,46,255)',\n                        // backgroundColor: 'rgba(253,231,217,255) ',\n        \n                        fill: false,\n                    },{\n                        data: dailyTown.map(({new_active})=> new_active),\n                        label: 'New Active',\n                        borderColor: 'rgba(14,41,123,255)',\n                        backgroundColor: 'rgba(207,242,255,255) ',\n                        fill: true,\n\n                    },{\n                        data: dailyTown.map(({new_recovery})=> new_recovery),\n                        label: 'New Recovery',\n                        borderColor: 'rgba(21,81,73,255)',\n                        backgroundColor: 'rgba(200,249,204,255)  ',\n                        fill: true,\n                    },{\n                        data: dailyTown.map(({new_death})=> new_death),\n                        label: 'New Death',\n                        borderColor: 'rgba(67,70,75)',\n                        backgroundColor: 'rgb(219,226,233)  ',\n                        fill: true,\n                    }],\n                } }             options={{\n                    maintainAspectRatio : false\n                }}\n            \n            />) : <Loading></Loading>\n    );\n\n  return (\n  <div className={styles.container}>\n      {town ? lineChartTown : lineChartMain}\n  </div>\n  )\n\n\n\n\n}\n\nexport default Charts;\n","import React,{useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\n\nimport {fetchTowns} from '../../api';\n\n\nconst CountryPicker = ({handleTownChange}) =>{\n\n    const [fetchedTowns, setFetchedTowns] = useState([]);\n\n\n    useEffect(()=>{\n        const fetchApi = async () =>{\n            setFetchedTowns( await fetchTowns());\n        }\n\n        fetchApi();\n\n\n    },[setFetchedTowns]);\n\n    \n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect className={styles.nativeSelect} defaultValue=\"\" onChange={(e) => handleTownChange(e.target.value)}>\n                <option value=\"\">Ilocos Norte</option>\n               {\n                fetchedTowns.map((towns,i) => (<option key={i} value={towns.town_name}>{towns.town_name}</option>))\n                // fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)\n                }\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nconst Legend = ({legendItems}) => {\n    return ( \n        <div className=\"legend\" style={{\n            display:'flex',\n            alignItems:'stretch',}} \n        >\n      {legendItems.map((item) => (\n        <div\n          className = \"legendBlock\"\n          key={item.title}\n          style={{\n            backgroundColor: item.color,\n            flex: 1,\n            display: \"flex\",\n            alignItems: \"center\", // vertical\n            justifyContent: \"center\", // horiztontal\n            color: item.textColor != null ? item.textColor : \"black\",\n            fontWeight: \"bolder\",\n            fontSize: \"1em\",\n            height: \"8vh\",\n          }}\n        >\n          <span>{item.title}</span>\n        </div>\n      ))}\n\n        </div>\n     );\n};\n \nexport default Legend;","import  { useEffect, useState } from 'react';\n\nconst useWindowSize =() =>{\n    const[widthSize, setWidthSize] = useState(window.innerWidth);\n    useEffect(() =>{\n        const handleResize = () =>{\n            setWidthSize(window.innerWidth) \n\n        }\n\n       window.addEventListener(\"resize\", handleResize);\n\n       return () =>{\n           window.removeEventListener(\"resize\",handleResize);\n\n       };\n\n    },[])\n\n    // console.log(widthSize);\n    return widthSize;\n\n}\n\nfunction WindowSize () {\n    const width = useWindowSize();\n    return width\n    \n\n}\n\nexport default WindowSize;","import React  from 'react';\nimport {MapContainer, GeoJSON, Popup} from 'react-leaflet';\nimport widthSize from '../../task/Windowsize'\nimport 'leaflet/dist/leaflet.css';\n\n\nconst CMap = ({towns, main,selectedTown}) => {\n\n    const geoCenter = [18.166667, 120.75];\n    const popUpPos =[18.206159,120.377474];\n    \n    const zoomLevel = widthSize() < 770 ? 9 : 9.5;\n\n    const mapStyle ={\n    \n        weight:1,\n        color:\"rgb(93,215,226)\",\n        fillOpacity:1,\n    };\n\n    const highlightFeature = (e) => {\n        var layer = e.target;\n    \n        layer.setStyle({\n            weight: 5,\n            color: 'rgb(93,215,226)',\n            dashArray: '',\n            fillOpacity: 0.7\n        });\n    }\n\n\n    const resetHighlight =(e) =>{\n        var layer = e.target;\n        layer.setStyle(mapStyle);\n\n    }\n\n  \n    const onEachTown = (town, layer) =>{\n\n  \n        layer.options.fillColor = town.properties.color;\n        const name = town.properties.MUNICIPALI;\n        const active_cases = town.properties.activeText;\n        const newActive = town.properties.newActiveText ;\n        const newRecovery = town.properties.newRecoveryText ;\n        const newDeath = town.properties.newDeathText ;\n\n        \n        layer.bindPopup(`<b>${name}</b><br/>\n                        Active Case:${\" \"} ${active_cases} <br/>\n                        New Active:${\" \"} ${newActive}<br/>\n                        New Recovery:${\" \"} ${newRecovery}<br/>\n                        New Death:${\" \"} ${newDeath}`  ); \n                \n        layer.on({\n               mouseover: highlightFeature,\n            mouseout: resetHighlight,\n                \n                        })\n\n    }\n\n    const formatNumberWithCommas = (number) => {\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      };\n\n\n    const PopUpData =(towns,main,selectedTown) =>{\n        var name='';\n        var active_cases =0;\n        var newActive = 0;\n        var newRecovery = 0;\n        var newDeath = 0;\n\n\n        for(let i =0 ; i < towns.length; i++){\n            const town = towns[i].properties\n          \n            if(town.MUNICIPALI === selectedTown.toUpperCase()){\n                 name = town.MUNICIPALI;\n                 newActive = town.activeText;\n                 active_cases = town.newActiveText\n                 newRecovery = town.newRecoveryText\n                 newDeath = town.newDeathText\n                break;\n            }\n          \n            \n        }\n\n\n        const townData =(\n        <div>\n        <b>{name}</b><br/>\n        Active Cases:{\" \"} {active_cases} <br/>\n        New Active:{\" \"} {newActive}<br/>\n        New Recovery:{\" \"} {newRecovery}<br/>\n        New Death:{\" \"} {newDeath}`  \n        </div>\n        )\n\n          //main data\n        const nameMain = 'Ilocos Norte'\n        const Total = formatNumberWithCommas(main.total_cases)\n        const Active = formatNumberWithCommas(main.active_cases)\n        const Recovery = formatNumberWithCommas(main.total_recoveries)\n        const Death = formatNumberWithCommas(main.total_deaths)\n\n        const mainDataIN =(\n            <div>\n            <b>{nameMain}</b><br/>\n            Total Cases:{\" \"} {Total} <br/>\n            Active:{\" \"} {Active}<br/>\n            Recovery:{\" \"} {Recovery}<br/>\n            Death:{\" \"} {Death} \n            </div>\n            )\n\n        return  ((selectedTown === \"\") ? mainDataIN :townData)\n        \n    }\n\n    return(\n\n        \n        \n        <MapContainer style={{height:\"90vh\"}} zoom={zoomLevel} center={geoCenter}>\n        \n            <GeoJSON style={mapStyle} data={towns} onEachFeature={onEachTown}  />\n            <Popup position={popUpPos} >{PopUpData(towns,main,selectedTown)}</Popup>\n           \n     \n        </MapContainer>\n      \n    );\n};\n\nexport default CMap\n\n","class LegendItems{\n    constructor(title, color, isFor, textColor){\n        this.title = title;\n        this.color = color;\n        this.isFor = isFor;\n        this.textColor = textColor != null ? textColor :\"black\";\n    }\n}\n\nexport default LegendItems;","import LegendItem from \"./LegendItem\";\n\nconst legendItems = [\n\n\n    new LegendItem(\n        \"61 & above\",\n        \"#EB6361\",\n        (cases) => cases >= 61 && cases <100_000,\n        \"white\"\n    ),\n    new LegendItem(\n        \"41 - 60\",\n        \"#FF9A94\",\n        (cases) => cases >= 41 && cases <61,\n        \"white\"\n        \n    ),\n    new LegendItem(\n        \"21 - 40\",\n        \"#FFB6AE\",\n        (cases) => cases >= 21 && cases <41,\n        \"white\"\n        \n    ),\n    new LegendItem(\n        \"1 - 20\",\n        \"#FFD3CA\",\n        (cases) => cases > 0 && cases <21,\n             \n    ),\n\n    new LegendItem(\"0 Cases\",\"#FFF0E6\",(cases) => true,)\n\n];\n\nexport default legendItems;\n\n","\n\nimport {features} from \"../data/ilocos.json\";\nimport legendItems from \"../entities/LegendItems\";\nimport {fetchDailyMap} from '../api';\n\n\n\n\nclass LoadTownsTask{\n\n    // covidUrl= \"https://raw.githubusercontent.com/lakaycoder/corona/main/covid.csv\";\n\n    setState = null;\n    mapTowns = features;\n\n    \n\n     \n\n    loadTown = async (setState) =>{\n        this.setState = setState;\n        const town =  await fetchDailyMap();\n        this.#processCovidDataTown(town);\n       \n\n\n    }\n\n    \n \n\n    #processCovidDataTown =(covidTowns) =>{\n       \n\n        for(let i = 0; i < this.mapTowns.length; i++){\n            const mapTown = this.mapTowns[i];\n            const covidTown = covidTowns.find(\n                (covidTown) => mapTown.properties.MUNICIPALI === covidTown.town_name\n                \n            );\n            mapTown.properties.active =0;\n            mapTown.properties.newActive =0;\n            mapTown.properties.newRecovery =0;\n            mapTown.properties.newDeath =0;\n            mapTown.properties.activeText = \"\";\n            mapTown.properties.newActiveText =\"\";\n            mapTown.properties.newRecoveryText =\"\";\n            mapTown.properties.newDeathText =\"\";\n\n            if(covidTown != null){\n                const active = Number(covidTown.active_cases);\n                const newActive = Number(covidTown.new_active);\n                const newRecovery = Number(covidTown.new_recovery);\n                const newDeath = Number(covidTown.new_death);\n                mapTown.properties.active = active;\n                mapTown.properties.newActive =newActive;\n                mapTown.properties.newRecovery =newRecovery;\n                mapTown.properties.newDeath =newDeath;\n                mapTown.properties.activeText = this.#formatNumberWithCommas(active);\n                mapTown.properties.newActiveText = this.#formatNumberWithCommas(newActive);\n                mapTown.properties.newRecoveryText = this.#formatNumberWithCommas(newRecovery);\n                mapTown.properties.newDeathText = this.#formatNumberWithCommas(newDeath);\n\n            }\n            \n            this.#setTownColor(mapTown)\n            \n        }\n        this.setState(this.mapTowns)\n\n    };\n\n    #setTownColor =(mapTown) =>{\n        const legendItem = legendItems.find((legendItem)=> \n            legendItem.isFor(mapTown.properties.active));\n\n        if(legendItem != null){\n            mapTown.properties.color = legendItem.color;\n        };\n\n    }\n   \n\n    #formatNumberWithCommas = (number) => {\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      };\n\n}\n\nexport default LoadTownsTask;","import React, { useEffect, useState } from \"react\";\n\nimport Loading from './Loading';\nimport Legend from './Legend';\nimport Cmap from './Cmap';\nimport LoadTownsTask from '../../task/LoadTownsTask';\nimport 'leaflet/dist/leaflet.css';\nimport \"./Maps.css\";\nimport legendItems from \"../../entities/LegendItems\";\n\nconst Covid19 =({mainData,town}) => {\n\n\n    \n    const main = mainData[0];\n    const selectedTown = town;\n\n const [towns, setTowns] = useState([]); // init value of countries . empty array\n const legendItemsInReverse = [...legendItems].reverse();\n\n const load = () => {\n     \n     const loadTownsTask = new LoadTownsTask();\n     \n     loadTownsTask.loadTown((towns) => setTowns(towns));\n    \n };\n\n\n\n\n useEffect(load,[]); \n\n\n    return(\n\n    <div className='cmaps'>\n       \n\n    { towns.length === 0 ? (<Loading/> ):\n                        (  <div >\n                                <Cmap towns={towns} main={main} selectedTown={selectedTown}/>\n                                <Legend className=\"legend\" legendItems={legendItemsInReverse} />\n                             \n                            </div>\n                         ) }\n\n\n    </div>\n\n);\n\n\n}\n\nexport default Covid19;","import React from 'react';\nimport styled from 'styled-components';\nimport './Coffee.css';\n\nconst Button = styled.a`\n  line-height: 2;\n  height: 5rem;\n  text-decoration: none;\n  display:inline-flex;\n  color: #a4a4a8;\n \n  border-radius: 15px;\n  border: 1px solid transparent;\n  padding: 0.7rem 1rem 0.7rem 1rem;\n  font-size: 2rem;\n  letter-spacing: 0.6px;\n \n  transition: 0.3s all linear;\n  font-family: cursive;\n  &:hover, &:active, &:focus {\n    text-decoration: none;\n    box-shadow: 0px 1px 2px 2px rgba(190, 190, 190, 0.5);\n    opacity: 0.85;\n    color:rgba(255,40,0);\n  }\n`;\n\nconst Image = styled.img`\n  height: 34px;\n  width: 35px;\n  margin-bottom: 1px;\n  box-shadow: none;\n  border: none;\n  vertical-align: middle;\n`;\n\nconst Text = styled.span`\n  margin-left: 15px;\n  font-size: 2rem;\n  vertical-align: middle;\n`;\n\nfunction Coffee() {\n  return (\n   \n    <div style={{textAlign:\"center\"}}>\n    <Button target=\"_blank\" href=\"https://www.buymeacoffee.com/copycoder\">\n      <Image src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\" alt=\"Buy me a coffee.\" />\n      <Text className=\"coffeetxt\">Buy me a coffee?</Text>\n    </Button>\n    </div>\n  );\n}\n\nexport default Coffee;","import React from \"react\";\nimport \"./Footer.css\";\nimport Coffee from './Coffee'\n\nfunction Footer() {\n  return (\n    <div className=\"main-footer\">\n      <hr />\n      <div className=\"container\">\n        <div className=\"flex-container\">\n     \n        <div className=\"flex-child msg\">\n          <div className=\"col\">\n            <h4><b>DISCLAIMER: THIS IS UNOFFICIAL COVID TRACKER!!!</b>\n            </h4>\n            <h4>\n            <b>FOLLOW THE OFFICIAL PAGE OF{' '}\n            <a\n            href=\"https://www.facebook.com/IlocosNorteOfficial/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ color: \"rgba(255,40,0)\", textDecoration: \"none\" }}\n            >\n            PGIN FB</a>{\" \"}FOR UPDATED INFO.</b>\n            </h4>       \n            <h4>\n            This React App is not affiliated, associated, authorized,  or in any way officially connected with the PGIN\n            </h4>\n            <br></br>\n           <div>\n           <a href = \"mailto:thenorthtech00@gmail.com?subject = Feedbackbody = Message\">\n            Send Feedback\n            </a>\n           </div>\n          </div>\n        </div>\n        <div className=\"flex-child kopi\">\n          <Coffee></Coffee>\n        </div>\n        </div>\n        <hr />\n        <div className=\"bot\">\n          <p className=\"col-sm\">\n            &copy;{new Date().getFullYear()} Copy Coder | ct: [stackoverflow,youtube,github] ={'>'} Copy and Paste   |\n            That's It | Weekend Project\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport {Cards, Charts, CountryPicker, Covid19, Footer} from './components';\nimport styles from './App.module.css';\nimport { fetchMainData, fetchDailyTown,fetchLatestTown } from './api';\nimport corona from './images/image.png'\n\nclass App extends React.Component{\n\n    state ={\n        dailyTown: [],\n        town:'',\n        mainData:[],\n        latestTown:[],\n\n\n\n    }\n\n\n    async componentDidMount(town){\n        // const fetcheddata = await fetchData();      \n        const fetchedMainData = await fetchMainData(town);\n\n        // const fmap = await fetchDailyMap();\n        // console.log(fmap,\"map\")\n\n\n        this.setState({mainData:fetchedMainData }); \n\n    }\n    \n\n    handleTownChange = async (town) =>{\n\n      \n        const fetchedDailyTown = await fetchDailyTown(town);\n        const fetchedLatestTown = await fetchLatestTown(town);\n    \n        \n        this.setState({dailyTown:fetchedDailyTown,town:town, latestTown:fetchedLatestTown});\n  \n      \n    }\n\n    render(){\n \n            const {dailyTown,town, mainData, latestTown} = this.state;\n            \n        return(\n            <div className={styles.container}>\n                <img className={styles.image} src={corona} alt=\"covid-19\"/>\n                <br />\n                <text>\n                    <b>Ilocos Norte Corona Virus Dashboard</b>\n                </text>\n                <text>\n                    <i>(Select city/town below)</i>\n                </text>\n                <CountryPicker  handleTownChange = {this.handleTownChange}/>\n                <Cards   mainData ={mainData} latestTown={latestTown} /> \n                <Charts  dailyTown ={dailyTown} town ={town}/>\n                <Covid19 mainData ={mainData} town ={town} />\n                <Footer></Footer>   \n                \n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './app';\n\nReactDom.render(<App />, document.getElementById('root'));\n// calling files inside public the basic html resides.","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"nativeSelect\":\"CountryPicker_nativeSelect__2MsIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}